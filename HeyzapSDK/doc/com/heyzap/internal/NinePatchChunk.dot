#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.heyzap.internal.NinePatchChunk
	c5273 [label=<<table title="com.heyzap.internal.NinePatchChunk" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NinePatchChunk.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NinePatchChunk </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  deserialize() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// com.heyzap.internal.NinePatchChunk NAVASSOC android.graphics.Rect
	c5273:p -> c5318:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// android.graphics.Rect
	c5318 [label=<<table title="android.graphics.Rect" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/android/graphics/Rect.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Rect </td></tr>
<tr><td align="center" balign="center"><font point-size="7.0"> android.graphics </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  equals() </td></tr>
<tr><td align="left" balign="left">  hashCode() </td></tr>
<tr><td align="left" balign="left">  toString() </td></tr>
<tr><td align="left" balign="left">  toShortString() </td></tr>
<tr><td align="left" balign="left">  flattenToString() </td></tr>
<tr><td align="left" balign="left">  unflattenFromString() </td></tr>
<tr><td align="left" balign="left">  isEmpty() </td></tr>
<tr><td align="left" balign="left">  width() </td></tr>
<tr><td align="left" balign="left">  height() </td></tr>
<tr><td align="left" balign="left">  centerX() </td></tr>
<tr><td align="left" balign="left">  centerY() </td></tr>
<tr><td align="left" balign="left">  exactCenterX() </td></tr>
<tr><td align="left" balign="left">  exactCenterY() </td></tr>
<tr><td align="left" balign="left">  setEmpty() </td></tr>
<tr><td align="left" balign="left">  set() </td></tr>
<tr><td align="left" balign="left">  set() </td></tr>
<tr><td align="left" balign="left">  offset() </td></tr>
<tr><td align="left" balign="left">  offsetTo() </td></tr>
<tr><td align="left" balign="left">  inset() </td></tr>
<tr><td align="left" balign="left">  contains() </td></tr>
<tr><td align="left" balign="left">  contains() </td></tr>
<tr><td align="left" balign="left">  contains() </td></tr>
<tr><td align="left" balign="left">  intersect() </td></tr>
<tr><td align="left" balign="left">  intersect() </td></tr>
<tr><td align="left" balign="left">  setIntersect() </td></tr>
<tr><td align="left" balign="left">  intersects() </td></tr>
<tr><td align="left" balign="left">  intersects() </td></tr>
<tr><td align="left" balign="left">  union() </td></tr>
<tr><td align="left" balign="left">  union() </td></tr>
<tr><td align="left" balign="left">  union() </td></tr>
<tr><td align="left" balign="left">  sort() </td></tr>
<tr><td align="left" balign="left">  describeContents() </td></tr>
<tr><td align="left" balign="left">  writeToParcel() </td></tr>
<tr><td align="left" balign="left">  readFromParcel() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

